#!/usr/bin/make -f

export DH_GOPKG := github.com/danos/xpath-plugins

GOBUILDDIR := _build
GO_PATH := $(CURDIR)/$(GOBUILDDIR)

# dh-golang inserts the trimpath flag into any build that isn't manually
# overridden. We need to match this when building plugins, or the plugins will
# not load due to a package mismatch error (which really means that the path
# to one or more common repos is different in the two builds).
#
# '-v' prints names of packages as compiled. Not needed for plugins to work,
# but added to exactly match flags in non-overridden build.
BUILD_ARGS_GO := -trimpath -v

# If the cover tool is present, use it in tests
GOCOVER=$(if $(shell go doc cmd/cover >/dev/null 2>&1 && echo true),-cover,)

%:
	dh $@ --with systemd,golang --buildsystem=golang --builddirectory=$(GOBUILDDIR)

# AFAICT, each separate plugin needs a 'GOPATH ... go build ...' entry here.
override_dh_auto_build: vet
	cd $(GOBUILDDIR)/src; \
	GOPATH=$(GO_PATH) \
	go build $(BUILD_ARGS_GO) -buildmode=plugin \
		-o intf_leafref_plugin.so \
		github.com/danos/xpath-plugins/interface-leafref-plugin/;
	cd $(GOBUILDDIR)/src; \
	GOPATH=$(GO_PATH) \
	go build $(BUILD_ARGS_GO) -buildmode=plugin \
		-o qos_profile_validation_plugin.so \
		github.com/danos/xpath-plugins/qos-profile-validation-plugin/;
	cd $(GOBUILDDIR)/src; \
	GOPATH=$(GO_PATH) \
	go build $(BUILD_ARGS_GO) -buildmode=plugin \
		-o siad_link_speed_plugin.so \
		github.com/danos/xpath-plugins/siad-link-speed-plugin/;
	cd $(GOBUILDDIR)/src; \
	GOPATH=$(GO_PATH) \
	go build $(BUILD_ARGS_GO) -buildmode=plugin \
		-o vif_interface_plugin.so \
		github.com/danos/xpath-plugins/vif-interface-plugin/;

override_dh_strip:
	dh_strip -X/opt/vyatta/lib/interface-leafref-plugin/intf_leafref_plugin.so; \
	dh_strip -X/opt/vyatta/lib/qos-profile-validation-plugin/qos_profile_validation_plugin.so
	dh_strip -X/opt/vyatta/lib/siad-link-speed-plugin/siad_link_speed_plugin.so
	dh_strip -X/opt/vyatta/lib/vif-interface-plugin/vif_interface_plugin.so

override_dh_auto_test:
	dh_auto_test -- $(GOCOVER)

# We do not vet vendor code
vet:
	if go doc cmd/vet >/dev/null 2>&1; then \
		GOPATH=$(CURDIR)/$(GOBUILDDIR) go vet $$(find . -type f -name \*.go | \
	    xargs dirname | sort -u | grep -v "/vendor/"); \
	fi
